import { api } from "encore.dev/api";

export interface ExportRequest {
  analysisData: {
    insights: Array<{
      category: string;
      title: string;
      description: string;
      impact: string;
      metrics?: Record<string, number>;
    }>;
    recommendations: Array<{
      title: string;
      description: string;
      priority: string;
      effort: string;
      expectedImpact: string;
    }>;
    summary: string;
    keyMetrics: Record<string, number>;
  };
  format: "email" | "linkedin" | "report";
  reportTitle: string;
}

export interface ExportResponse {
  content: string;
  format: string;
  generatedAt: Date;
}

// Exports analysis results in different formats for sharing.
export const exportAnalysis = api<ExportRequest, ExportResponse>(
  { expose: true, method: "POST", path: "/export" },
  async (req) => {
    let content = "";

    switch (req.format) {
      case "email":
        content = generateEmailFormat(req.analysisData, req.reportTitle);
        break;
      case "linkedin":
        content = generateLinkedInFormat(req.analysisData, req.reportTitle);
        break;
      case "report":
        content = generateReportFormat(req.analysisData, req.reportTitle);
        break;
      default:
        content = generateReportFormat(req.analysisData, req.reportTitle);
    }

    return {
      content,
      format: req.format,
      generatedAt: new Date()
    };
  }
);

function generateEmailFormat(data: ExportRequest['analysisData'], title: string): string {
  const topInsights = data.insights.filter(i => i.impact === 'high').slice(0, 3);
  const topRecommendations = data.recommendations.filter(r => r.priority === 'high').slice(0, 3);

  return `Subject: ${title} - Key Insights & Recommendations

Hi there,

Here's your automated analysis summary for ${title}:

📊 EXECUTIVE SUMMARY
${data.summary}

🔍 TOP INSIGHTS
${topInsights.map((insight, i) => `${i + 1}. ${insight.title}
   ${insight.description}`).join('\n\n')}

💡 PRIORITY RECOMMENDATIONS
${topRecommendations.map((rec, i) => `${i + 1}. ${rec.title}
   ${rec.description}
   Expected Impact: ${rec.expectedImpact}`).join('\n\n')}

📈 KEY METRICS
${Object.entries(data.keyMetrics).map(([key, value]) => `• ${key}: ${typeof value === 'number' ? value.toLocaleString() : value}`).join('\n')}

Best regards,
Your Analytics Dashboard`;
}

function generateLinkedInFormat(data: ExportRequest['analysisData'], title: string): string {
  const topInsight = data.insights.find(i => i.impact === 'high') || data.insights[0];
  const topRecommendation = data.recommendations.find(r => r.priority === 'high') || data.recommendations[0];

  return `🚀 Just analyzed our latest ${title} data - here's what stood out:

📊 Key Finding: ${topInsight?.title || 'Data analysis complete'}
${topInsight?.description || data.summary}

💡 Next Action: ${topRecommendation?.title || 'Continue monitoring performance'}
${topRecommendation?.description || 'Focus on data-driven improvements'}

${Object.entries(data.keyMetrics).slice(0, 3).map(([key, value]) => `📈 ${key}: ${typeof value === 'number' ? value.toLocaleString() : value}`).join('\n')}

Data-driven decisions lead to better results! 📈

#Analytics #Marketing #DataDriven #Performance`;
}

function generateReportFormat(data: ExportRequest['analysisData'], title: string): string {
  return `# ${title} - Analysis Report

Generated on: ${new Date().toLocaleDateString()}

## Executive Summary
${data.summary}

## Key Metrics
${Object.entries(data.keyMetrics).map(([key, value]) => `- **${key}**: ${typeof value === 'number' ? value.toLocaleString() : value}`).join('\n')}

## Insights

${data.insights.map((insight, i) => `### ${i + 1}. ${insight.title}
**Category**: ${insight.category}  
**Impact**: ${insight.impact.toUpperCase()}

${insight.description}

${insight.metrics ? `**Related Metrics**:
${Object.entries(insight.metrics).map(([key, value]) => `- ${key}: ${value.toLocaleString()}`).join('\n')}` : ''}
`).join('\n')}

## Recommendations

${data.recommendations.map((rec, i) => `### ${i + 1}. ${rec.title}
**Priority**: ${rec.priority.toUpperCase()}  
**Effort**: ${rec.effort.toUpperCase()}

${rec.description}

**Expected Impact**: ${rec.expectedImpact}
`).join('\n')}

---
*Report generated by Auto-Reporting Dashboard*`;
}
